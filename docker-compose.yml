services:
  postgres-db:
    image: postgres:15-alpine # Use a specific version
    container_name: appointment_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: appointmentdb
    ports:
      - "5432:5432" # Map host port 5432 to container port 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d appointmentdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    container_name: appointment_service
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
        postgres-db:
            condition: service_healthy # Wait for DB to be ready
    ports:
      - "3001:3001" # Map host port 3001 to container port 3001
    environment:
      - DATABASE_URL=postgresql://user:password@postgres-db:5432/appointmentdb?schema=public
      - PORT=3001
      # Add other environment variables as needed
      - NODE_ENV=production # Set environment to production
    # Command to run migrations on startup before starting the app
    # Using a simple entrypoint script or handle retries within the app might be more robust
    # command: >
      # sh -c "npx prisma migrate deploy && node dist/server.js"

volumes:
  postgres_data: # Define the named volume for persistence